{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/about.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","redcuer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","about","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44096127.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { stat } from 'fs';\n\nconst Context = React.createContext();\n\nconst redcuer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }  \n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id?contact = action.payload : contact)\n    }  \n    default : \n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n    \n    ], \n    dispatch: action => { this.setState(state => redcuer(state, action))}\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts: res.data});\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context'; \nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  }\n  onShowClick = e => {\n    this.setState({showContactInfo:!this.state.showContactInfo});\n  }\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({type: 'DELETE_CONTACT', payload: id})\n  };\n\n  render() {\n    const {id, name, email, phone}  = this.props.contact; \n    const {showContactInfo} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n            <h4>{name} <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}/>\n            <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{cursor:'pointer', float:'right', color: 'red'}}/>\n            <Link to={`contact/edit/${id}`}>\n              <i \n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',  \n                float: 'right',\n                color: 'black', \n                marginRight: '1rem'\n              }}\n              >\n              </i>\n            </Link>\n            </h4>\n            {showContactInfo ? (<ul className=\"list-group\"> \n                <li className=\"list-group-item\">{email} </li>\n                <li className=\"list-group-item\">{phone} </li>\n            </ul>):null}\n            \n          </div>\n          )\n        }}\n      </Consumer>\n\n    );\n  }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n\n  render() {\n    return (\n      <Consumer>\n         {value => {\n           const { contacts } = value;\n           return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> list</h1>\n            {contacts.map(contact=>(\n             <Contact key={contact.id} contact={contact} />\n              ))}\n          </React.Fragment>\n           )\n         }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name, \n  value, \n  placeholder,\n  type, \n  onChange, \n  error\n  }) => {\n  return (\n    <div className=\"form-group\">\n                <label htmlFor={name}>{label}</label>\n                <input \n                name={name} \n                type={type} \n                className={classnames('form-control form-control-lg', \n                {\n                  'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                />\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n                \n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '', \n    phone: '', \n    errors: {}\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({errors: {name: 'Name is required'}});\n      return;\n    }\n\n    if (email === '') {\n      this.setState({errors: {email: 'Email is required'}});\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({errors: {phone: 'Phone is required'}});\n      return;\n    }\n\n    const newContact = {\n      name, \n      email, \n      phone\n    }\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n \n    dispatch({type: 'ADD_CONTACT', payload: res.data});\n    \n    this.setState({name:'', email:'', phone:'', errors:{}});\n    this.props.history.push('/')\n\n  }\n  \n  render() {\n    const { name, email, phone, errors } = this.state; \n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">\n            Add contact\n            </div>\n            <div className=\"card-body\">\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                <TextInputGroup \n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter name...\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                <TextInputGroup \n                  label=\"Email\"\n                  name=\"email\"\n                  placeholder=\"Enter email...\"\n                  value={email}\n                  type=\"email\"\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextInputGroup \n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter phonenumber...\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <input type=\"submit\" className=\"btn btn-block btn-light\" value=\"add contact\"/>\n            </form>\n            </div>\n          </div>\n          ) \n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '', \n    phone: '', \n    errors: {}\n  }\n\n  async componentDidMount() {\n    const {id} = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = res.data;\n    this.setState({name: contact.name, email: contact.email, phone: contact.phone});\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({errors: {name: 'Name is required'}});\n      return;\n    }\n\n    if (email === '') {\n      this.setState({errors: {email: 'Email is required'}});\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({errors: {phone: 'Phone is required'}});\n      return;\n    }\n\n    const updContact = {\n      name, \n      email, \n      phone\n    }\n\n    const {id} = this.props.match.params;\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n    dispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n    this.setState({name:'', email:'', phone:'', errors:{}});\n    this.props.history.push('/')\n\n  }\n  \n  render() {\n    const { name, email, phone, errors } = this.state; \n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">\n            Edit contact\n            </div>\n            <div className=\"card-body\">\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                <TextInputGroup \n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter name...\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                <TextInputGroup \n                  label=\"Email\"\n                  name=\"email\"\n                  placeholder=\"Enter email...\"\n                  value={email}\n                  type=\"email\"\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextInputGroup \n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter phonenumber...\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <input type=\"submit\" className=\"btn btn-block btn-light\" value=\"update contact\"/>\n            </form>\n            </div>\n          </div>\n          ) \n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n        const {\n            branding\n        } = props;\n        return ( \n        <nav className=\"nav navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\"> \n        <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\n        <div>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                <Link to=\"/\" className=\"navbar-brand\"><i className=\"fas fa-home\"> Home</i></Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"navbar-brand\"><i className=\"fas fa-plus\"></i> Add</Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"navbar-brand\"><i className=\"fas fa-question\"></i> About</Link>\n                </li>\n            </ul>\n        </div>\n        </div></nav>)\n}\n\nHeader.defaultProps = {\nbranding: 'My app'\n};\n\nHeader.propTypes = {\nbranding: PropTypes.string.isRequired\n};\n\n\nexport default Header;","import React from 'react'\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager {props.match.params.id}</h1>\n      <p className=\"lead\">Simple app to manage contacts.</p>\n      <p className=\"text-secondary\">Version 1.0.1</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function () {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page not found</h1>\n      <p className=\"lead\">Sorry that page does not exists.</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\n/* Lifecycle methods */\nclass Test extends Component {\n\n  state = {\n    title: '', \n    body: ''\n  }\n\n  componentDidMount() {\n    console.log('component did mount, call http apis here');\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n    .then(response => response.json())\n    .then(data => this.setState({title: data.title, body: data.body}))\n  }\n\n  /*\n  componentWillMount() {\n    console.log('component will mount');\n  }\n\n  componentDidUpdate() {\n    console.log('component did update ');\n  }\n\n  componentWillUpdate() {\n    console.log('component will update ');\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    console.log('componentWillReceiveProps');\n  }\n\n  static getDerivedStateFromProps() {\n    return null;\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n\n  }\n*/\n\n  render() {\n    const {title, body} = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, {\n  Component\n} from \"react\";\n\nimport { HashRouter as Router, Route, Switch  } from \"react-router-dom\";\n\nimport Contacts from './components/contacts/Contacts';\n\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/layout/Header';\nimport About from \"./components/pages/about\";\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Hyperity\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component = {Contacts}/>\n                <Route exact path=\"/contact/add\" component = {AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component = {EditContact}/>\n                <Route exact path=\"/about/:id\" component = {About}/>\n                <Route exact path=\"/test\" component = {Test}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}